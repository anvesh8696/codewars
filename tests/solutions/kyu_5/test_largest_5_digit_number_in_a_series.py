# pylint: disable=missing-docstring, redefined-outer-name

"""Largest 5 digit number in a series"""

import pytest

from solutions.kyu_5 import solution


EXAMPLES = (
    ('digits', 'expected'),
    [
        ('1234567898765', 98765),
        ('123456789876', 89876),
        ('9876498765', 98765),
        ('9987199890', 99890),
        ('9000091900', 91900),
        ('9100192002', 92002),
        ('9200191002', 92001),
    ]
)


@pytest.fixture
def number():
    return '73167176531330624919225119674426574742355349194934969835203685' \
           '42506326239578318016984801869478851843858615607891129494954595' \
           '01737958331952853208805511125406987471585238630507156932909632' \
           '95227443043557668966489504452445231617318564030987111217223831' \
           '13622298934233803081353362766142828064444866452387493035890729' \
           '62904915604407723907138105158593079608667017242712188399879790' \
           '87922749219016997208880937766572733300105336788122023542180975' \
           '12545405947522435258490771167055601360483958644670632441572215' \
           '53975312345797784617406495514929086256932197846862248283972241' \
           '37565705605749026140797296865241453510047482166370484403199890' \
           '00889524345065854122758866688116427171479924442928230863465674' \
           '81391912316282458617866458359124566529476545682848912883142607' \
           '69004224219022671055626321111109370544217506941658960408071984' \
           '03850962455444362981230987879927244284909188845801561660979191' \
           '33875499200524063689912560717606058861164671094050775410022569' \
           '83155200055935729725716362695618826704282524836008232575409207' \
           '52963450'


@pytest.mark.parametrize(*EXAMPLES)
def test_returns_correct_result(digits, expected):
    assert solution(digits) == expected


def test_big_number(number):
    assert solution(number) == 99890
